#!/usr/bin/env bash

thisdir="$(readlink -f $0)"; thisdir="${thisdir%/*}";

thisrepo_locs="$thisdir/bump-jre-version-locations--thisrepo.txt"
core_locs="$thisdir/bump-jre-version-locations--core-repo.txt"
thisrepo_root="$(readlink -f "$thisdir/../..")"
core_root="$(readlink -f "$thisdir/../../../core")"

[[ ! -f "$thisrepo_locs" ]] && { echo "did not find this repo's bump version locations" >&2; exit 1; }
[[ ! -f "$core_locs" ]] && { echo "did not find core repo's bump version locations" >&2; exit 1; }
[[ ! -d "$thisrepo_root" ]] && { echo "did not find this repo's root dir" >&2; exit 1; }
[[ ! -d "$thisrepo_root" ]] && { echo "did not find core repo's root dir" >&2; exit 1; }
[[ ! -d "$core_root/org.jcryptool.product" ]] && { echo "core repo root $core_root has no org.jcryptool.product; that aint right. exiting." >&2; exit 1; }

cd "$thisrepo_root"
if [[ -n "$CURVER" ]]; then
    currentversion="$CURVER"
else
    currentversion="$(cat "$thisrepo_locs" | grep 'pom.xml' |  head -n 1 | xargs cat | sed -n 's/.*version.\(11.*\)..version.*/\1/p' | head -n 1)"
fi
[[ -z "$currentversion" ]] && { echo "could not find current version" >&2; exit 1; }

echo "The current version is $currentversion"
read -p "enter the new version or abort with Control-C: " -r version; version="$(echo "$version" | sed 's/[ \n\t]//g')";
[[ -z "$version" ]] && exit 2;

while read -r file; do
    [[ "$file" = '#'* ]] && continue;
    [[ -f "$PWD/$file" ]] && sed -i -- "s/$currentversion/$version/g" "$PWD/$file" && echo replaced in "$PWD/$file"
    [[ ! -f "$PWD/$file" ]] && "echo WARNING: replace loc $PWD/$file is not a file! not processing it..." >&2
done < "$thisrepo_locs"
cd "$core_root"
while read -r file; do
    [[ "$file" = '#'* ]] && continue;
    [[ -f "$PWD/$file" ]] && sed -i -- "s/$currentversion/$version/g" "$PWD/$file" && echo replaced in "$PWD/$file"
    [[ ! -f "$PWD/$file" ]] && "echo WARNING: replace loc $PWD/$file is not a file! not processing it..." >&2
done < "$core_locs"
